'use client';

import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { Loader2, FileBarChart, Info, AlertCircle, CheckCircle, AlertTriangle } from 'lucide-react';
import { Bar, Pie } from 'react-chartjs-2';
import { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';
import { jsPDF } from 'jspdf';
import html2canvas from 'html2canvas';
import { cn } from '@/lib/utils';

// Register ChartJS components
ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement);
type AIAnalysisResult = {
  attack: string;
  confidence: number;
  anomalyScore: number;
  iocs: string[];
  explanation: string;
  mlPrediction?: {
    isAttack: boolean;
    attackType: string | null;
    confidence: number;
    anomalyScore: number;
    predictions?: Record<string, number>;
    featureImportance?: Record<string, number>;
    modelUsed: string;
  };
};
type AIResultsProps = {
  result: AIAnalysisResult | null;
  isLoading: boolean;
  evidenceId: number;
  evidenceName?: string;
  onClose: () => void;
};
export default function AIResults({
  result,
  isLoading,
  evidenceId,
  evidenceName = "Evidence",
  onClose
}: AIResultsProps) {
  const [showExplanation, setShowExplanation] = useState(false);
  const [isGeneratingReport, setIsGeneratingReport] = useState(false);
  const handleGenerateReport = async () => {
    if (!result) return;
    setIsGeneratingReport(true);
    try {
      // Using html2canvas to capture the result content
      const element = document.getElementById('ai-analysis-results');
      if (!element) return;
      const canvas = await html2canvas(element, {
        scale: 2,
        logging: false,
        useCORS: true
      });

      // Create PDF
      const pdf = new jsPDF('p', 'mm', 'a4');
      const imgWidth = 210; // A4 width in mm (210mm)
      const imgHeight = canvas.height * imgWidth / canvas.width;

      // Add logo and header
      pdf.setFontSize(22);
      pdf.setTextColor(32, 80, 170);
      pdf.text('CYBERSIFT', 20, 20);
      pdf.setFontSize(16);
      pdf.setTextColor(60, 60, 60);
      pdf.text('Forensic Analysis Report', 20, 30);

      // Add metadata
      pdf.setFontSize(11);
      pdf.setTextColor(80, 80, 80);
      pdf.text(`Evidence ID: ${evidenceId}`, 20, 40);
      pdf.text(`Evidence Name: ${evidenceName}`, 20, 47);
      pdf.text(`Report Generated: ${new Date().toLocaleString()}`, 20, 54);

      // Add the captured image of analysis results
      pdf.addImage(canvas.toDataURL('image/png'), 'PNG', 10,
      // x position
      65,
      // y position - below the header
      imgWidth - 20,
      // width
      imgHeight * 0.8 // height (scaled down a bit)
      );

      // Add footer with disclaimer
      const pageCount = pdf.getNumberOfPages();
      pdf.setFontSize(8);
      pdf.setTextColor(150, 150, 150);
      pdf.text('This report was automatically generated by Cybersift AI. The findings should be verified by a forensic professional.', 20, pdf.internal.pageSize.height - 10);

      // Save the PDF
      pdf.save(`cybersift-report-evidence-${evidenceId}.pdf`);
    } catch (error) {
      console.error("Error generating PDF report:", error);
      alert("Failed to generate report. Please try again later.");
    } finally {
      setIsGeneratingReport(false);
    }
  };
  if (isLoading) {
    return <div className="flex flex-col items-center justify-center p-10" data-unique-id="8fabd8ca-8a05-40f5-be5f-8ca9cab3d8eb" data-loc="105:11-105:75" data-file-name="components/analysis/ai-results.tsx">
        <Loader2 className="w-12 h-12 text-blue-600 animate-spin mb-4" />
        <h3 className="text-lg font-medium text-gray-900" data-unique-id="f69436c3-ac52-434e-9871-692b83123761" data-loc="107:8-107:58" data-file-name="components/analysis/ai-results.tsx">Analyzing Evidence</h3>
        <p className="text-gray-500 text-center mt-2" data-unique-id="4832d04f-67f3-42dd-b0dc-375b56b067fe" data-loc="108:8-108:54" data-file-name="components/analysis/ai-results.tsx">
          The AI is processing your evidence file and detecting potential threats.
          This may take a few moments...
        </p>
      </div>;
  }
  if (!result) {
    return <div className="flex flex-col items-center justify-center p-10" data-unique-id="ea294aec-0955-45cd-ba9d-8b9665e1d6cd" data-loc="115:11-115:75" data-file-name="components/analysis/ai-results.tsx">
        <AlertCircle className="w-12 h-12 text-amber-500 mb-4" />
        <h3 className="text-lg font-medium text-gray-900" data-unique-id="e610f562-8b01-4272-8f4d-667431faaa1f" data-loc="117:8-117:58" data-file-name="components/analysis/ai-results.tsx">No Analysis Available</h3>
        <p className="text-gray-500 text-center mt-2" data-unique-id="cb35fdf7-fbc6-4007-9d00-ddec2a2c43be" data-loc="118:8-118:54" data-file-name="components/analysis/ai-results.tsx">
          There are no analysis results available for this evidence.
          Try uploading the evidence again or select a different file.
        </p>
        <button onClick={onClose} className="mt-6 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700" data-unique-id="cf17ea2e-1632-472b-bf9c-5d1dae215b35" data-loc="122:8-122:113" data-file-name="components/analysis/ai-results.tsx">
          Close
        </button>
      </div>;
  }
  const getSeverityColor = (score: number) => {
    if (score >= 90) return 'bg-red-500';
    if (score >= 75) return 'bg-orange-500';
    if (score >= 60) return 'bg-amber-500';
    return 'bg-green-500';
  };
  const getSeverityText = (score: number) => {
    if (score >= 90) return 'Critical';
    if (score >= 75) return 'High';
    if (score >= 60) return 'Medium';
    return 'Low';
  };

  // Prepare chart data
  const chartData = {
    labels: ['Confidence', 'Anomaly Score'],
    datasets: [{
      label: 'Score',
      data: [result.confidence, result.anomalyScore],
      backgroundColor: ['rgba(54, 162, 235, 0.6)', 'rgba(255, 99, 132, 0.6)'],
      borderColor: ['rgba(54, 162, 235, 1)', 'rgba(255, 99, 132, 1)'],
      borderWidth: 1
    }]
  };
  const pieData = {
    labels: ['Attack Confidence', 'Uncertainty'],
    datasets: [{
      data: [result.confidence, 100 - result.confidence],
      backgroundColor: ['rgba(54, 162, 235, 0.6)', 'rgba(220, 220, 220, 0.6)'],
      borderColor: ['rgba(54, 162, 235, 1)', 'rgba(220, 220, 220, 1)'],
      borderWidth: 1
    }]
  };
  // Create data for attack prediction distribution chart if available
  const attackPredictionsData = result?.mlPrediction?.predictions ? {
    labels: Object.keys(result.mlPrediction.predictions),
    datasets: [{
      data: Object.values(result.mlPrediction.predictions),
      backgroundColor: ['rgba(54, 162, 235, 0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(255, 205, 86, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)', 'rgba(201, 203, 207, 0.6)'],
      borderColor: ['rgba(54, 162, 235, 1)', 'rgba(255, 99, 132, 1)', 'rgba(75, 192, 192, 1)', 'rgba(255, 205, 86, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)', 'rgba(201, 203, 207, 1)'],
      borderWidth: 1
    }]
  } : null;
  return <div id="ai-analysis-results" className="space-y-6 max-w-4xl mx-auto" data-unique-id="2776f020-9750-496e-adb9-6f8391cf4198" data-loc="170:9-170:79" data-file-name="components/analysis/ai-results.tsx">
      <div className="flex items-center justify-between p-4 bg-blue-50 rounded-lg" data-unique-id="da78b670-4856-4365-a849-d3d024ee666c" data-loc="171:6-171:83" data-file-name="components/analysis/ai-results.tsx">
        <div data-unique-id="7e96ebe7-b7a3-46a1-b57b-143c1de7d7ed" data-loc="172:8-172:13" data-file-name="components/analysis/ai-results.tsx">
          <h3 className="text-xl font-semibold text-gray-900" data-unique-id="19c5ff5b-5778-47fb-bb97-a8ae5f8e26e7" data-loc="173:10-173:62" data-file-name="components/analysis/ai-results.tsx">
            {result.attack} Attack Detected
          </h3>
          <p className="text-sm text-gray-600" data-unique-id="35f4f0dc-6a97-44ba-81ee-88b40348cd04" data-loc="176:10-176:47" data-file-name="components/analysis/ai-results.tsx">
            Evidence ID: {evidenceId} â€¢ {evidenceName}
          </p>
        </div>
        
        <div className={cn("px-3 py-1 rounded-full text-white font-medium text-sm", getSeverityColor(result.confidence))} data-unique-id="ccf377fb-cd2c-4711-85f1-028797332b20" data-loc="181:8-181:122" data-file-name="components/analysis/ai-results.tsx">
          {getSeverityText(result.confidence)} Severity
        </div>
      </div>
      
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6" data-unique-id="21599a34-322d-4628-a65b-b78fded60c8d" data-loc="186:6-186:61" data-file-name="components/analysis/ai-results.tsx">
        <div data-unique-id="6cd26eea-59fe-46eb-88b9-b95188f935e7" data-loc="187:8-187:13" data-file-name="components/analysis/ai-results.tsx">
          <h4 className="font-medium mb-3 text-gray-700" data-unique-id="e7d514cd-8aef-4c04-b4cc-5882249a22ed" data-loc="188:10-188:57" data-file-name="components/analysis/ai-results.tsx">
            Analysis Scores
          </h4>
          <div className="h-64 bg-white p-4 rounded-lg border shadow-sm" data-unique-id="c20c1edc-f6af-4cea-8e0a-7fc8c8207c4a" data-loc="191:10-191:73" data-file-name="components/analysis/ai-results.tsx">
            <Bar data={chartData} options={{
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
              legend: {
                display: false
              },
              tooltip: {
                callbacks: {
                  label: function (context) {
                    return `Score: ${context.parsed.y}%`;
                  }
                }
              }
            },
            scales: {
              y: {
                beginAtZero: true,
                max: 100,
                title: {
                  display: true,
                  text: 'Score (%)'
                }
              }
            }
          }} />
          </div>
        </div>
        
        <div data-unique-id="3a11f98a-f594-4575-a276-45847dc77029" data-loc="221:8-221:13" data-file-name="components/analysis/ai-results.tsx">
          <h4 className="font-medium mb-3 text-gray-700" data-unique-id="c9669f5a-93d3-46ee-8199-18dc76ed6d94" data-loc="222:10-222:57" data-file-name="components/analysis/ai-results.tsx">
            Confidence Distribution
          </h4>
          <div className="h-64 bg-white p-4 rounded-lg border shadow-sm" data-unique-id="1da751f5-203a-4890-8bbe-b4e141df7994" data-loc="225:10-225:73" data-file-name="components/analysis/ai-results.tsx">
            <Pie data={pieData} options={{
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
              tooltip: {
                callbacks: {
                  label: function (context) {
                    return `${context.label}: ${context.parsed}%`;
                  }
                }
              }
            }
          }} />
          </div>
        </div>
      </div>
      
      <div className="bg-white p-6 rounded-lg border shadow-sm" data-unique-id="a8487a57-ccb1-46ef-b182-e92853c7d0ae" data-loc="243:6-243:64" data-file-name="components/analysis/ai-results.tsx">
        <h4 className="font-medium mb-4 text-gray-700 flex items-center" data-unique-id="a754893c-a660-4d1f-ae0d-f170676ba867" data-loc="244:8-244:73" data-file-name="components/analysis/ai-results.tsx">
          <AlertTriangle className="w-5 h-5 mr-2 text-amber-500" />
          Indicators of Compromise (IOCs)
        </h4>
        
        <ul className="space-y-2" data-unique-id="8fd69d93-72b6-4453-a750-5498b4749363" data-loc="249:8-249:34" data-file-name="components/analysis/ai-results.tsx">
          {result.iocs.map((ioc, index) => <motion.li key={index} initial={{
          opacity: 0,
          y: 10
        }} animate={{
          opacity: 1,
          y: 0
        }} transition={{
          delay: index * 0.1
        }} className="flex items-start" data-unique-id="b1261e4d-e068-4d62-b97b-b4fecea0d387" data-loc="250:43-258:40" data-file-name="components/analysis/ai-results.tsx">
              <div className="h-5 w-5 mr-2 mt-0.5 text-blue-600" data-unique-id="797f6ce1-50e1-4e23-bd44-83db96d551c8" data-loc="259:14-259:65" data-file-name="components/analysis/ai-results.tsx">â€¢</div>
              <span className="text-gray-700" data-unique-id="22453b1e-cd73-4275-a55a-6a3528255f4b" data-loc="260:14-260:46" data-file-name="components/analysis/ai-results.tsx">{ioc}</span>
            </motion.li>)}
        </ul>
        
        <div className="mt-6 pt-4 border-t" data-unique-id="8e090ca6-ae4e-46e4-bcd3-3ff8619af357" data-loc="264:8-264:44" data-file-name="components/analysis/ai-results.tsx">
          <div className="flex justify-between items-center" data-unique-id="cb0004c5-ebbb-41b7-a4d5-bbdf3ceac2d7" data-loc="265:10-265:61" data-file-name="components/analysis/ai-results.tsx">
            <h4 className="font-medium text-gray-700 flex items-center" data-unique-id="787dbe0f-eb96-4101-bcf0-e7f2ad3812f3" data-loc="266:12-266:72" data-file-name="components/analysis/ai-results.tsx">
              <Info className="w-5 h-5 mr-2 text-blue-500" />
              AI Explanation
            </h4>
            
            <label className="inline-flex items-center cursor-pointer" data-unique-id="88ef9028-ad98-4116-8966-64d3b0d0802d" data-loc="271:12-271:71" data-file-name="components/analysis/ai-results.tsx">
              <span className="mr-2 text-sm text-gray-500" data-unique-id="6f2bab42-e998-4b99-85ee-64755836312c" data-loc="272:14-272:59" data-file-name="components/analysis/ai-results.tsx">Validate Findings</span>
              <div className="relative" data-unique-id="623f1174-c293-47f2-9a13-cb366a00f15e" data-loc="273:14-273:40" data-file-name="components/analysis/ai-results.tsx">
                <input type="checkbox" className="sr-only" checked={showExplanation} onChange={() => setShowExplanation(!showExplanation)} data-unique-id="0cafdd64-6d18-4e50-be66-d179f9d854d4" data-loc="274:16-274:141" data-file-name="components/analysis/ai-results.tsx" />
                <div className={cn("block w-10 h-6 rounded-full transition-colors", showExplanation ? "bg-blue-600" : "bg-gray-300")} data-unique-id="d6a9a0a9-4597-4704-8529-8ee6909e8726" data-loc="275:16-275:134" data-file-name="components/analysis/ai-results.tsx"></div>
                <div className={cn("dot absolute left-1 top-1 bg-white w-4 h-4 rounded-full transition transform", showExplanation ? "translate-x-4" : "")} data-unique-id="600a0f77-9939-4520-a4d2-aa0f70b2a3f6" data-loc="276:16-276:156" data-file-name="components/analysis/ai-results.tsx"></div>
              </div>
            </label>
          </div>
          
          {showExplanation ? <motion.div initial={{
          opacity: 0,
          height: 0
        }} animate={{
          opacity: 1,
          height: "auto"
        }} className="mt-4 p-4 bg-blue-50 rounded-lg text-gray-700" data-unique-id="578e4931-29da-4cca-82f5-928d73cf5189" data-loc="281:29-287:68" data-file-name="components/analysis/ai-results.tsx">
              <p data-unique-id="39c1968b-1785-45ed-b678-c294e52dac02" data-loc="288:14-288:17" data-file-name="components/analysis/ai-results.tsx">{result.explanation}</p>
              <div className="mt-4 pt-4 border-t border-blue-100" data-unique-id="c3cd87f0-c62e-4a12-af57-433e3716f948" data-loc="289:14-289:66" data-file-name="components/analysis/ai-results.tsx">
                <h5 className="font-medium text-gray-700 mb-2" data-unique-id="a6f1b359-3216-456f-b3c4-566ff4dbbe50" data-loc="290:16-290:63" data-file-name="components/analysis/ai-results.tsx">AI Logic Explanation:</h5>
                <p className="text-sm text-gray-600" data-unique-id="7dccf5f3-0796-4908-9783-20e06bb4bddf" data-loc="291:16-291:53" data-file-name="components/analysis/ai-results.tsx">
                  The AI model identified this attack type based on pattern matching against known attack signatures.
                  The confidence score ({result.confidence}%) represents the statistical likelihood of the classification
                  being correct based on the evidence provided. The anomaly score ({result.anomalyScore}%) measures deviation 
                  from normal baseline behavior. The indicators of compromise were extracted from the evidence using 
                  heuristic analysis and threat intelligence correlation.
                </p>
              </div>
            </motion.div> : <p className="mt-4 text-gray-600" data-unique-id="fd67173d-75de-40b8-b575-a72ea834dbda" data-loc="299:28-299:62" data-file-name="components/analysis/ai-results.tsx">
              {result.explanation}
            </p>}
        </div>
      </div>

      {/* ML Model Information - only show when ML prediction is available */}
      {result.mlPrediction && <div className="bg-white p-6 rounded-lg border shadow-sm" data-unique-id="d59e4121-f25e-4d4a-8e92-c5549b15b8ad" data-loc="306:30-306:88" data-file-name="components/analysis/ai-results.tsx">
          <h4 className="font-medium mb-4 text-gray-700 flex items-center" data-unique-id="52f524ea-be58-4734-8efb-f2b019dd2af2" data-loc="307:10-307:75" data-file-name="components/analysis/ai-results.tsx">
            <Info className="w-5 h-5 mr-2 text-blue-500" />
            Machine Learning Model Analysis
          </h4>
          
          <div className="mb-4" data-unique-id="97b99fe1-4ddd-4f12-910a-121362bd4845" data-loc="312:10-312:32" data-file-name="components/analysis/ai-results.tsx">
            <div className="flex justify-between items-center" data-unique-id="03433c12-2d73-45a7-92fa-311ef64a433b" data-loc="313:12-313:63" data-file-name="components/analysis/ai-results.tsx">
              <p className="text-sm text-gray-600" data-unique-id="db5e2f1d-6d08-4463-a724-1517b9bdec40" data-loc="314:14-314:51" data-file-name="components/analysis/ai-results.tsx">
                <strong data-unique-id="ce03e93b-c454-4fb4-bfcf-d57796be4817" data-loc="315:16-315:24" data-file-name="components/analysis/ai-results.tsx">Model Used:</strong> {result.mlPrediction.modelUsed}
              </p>
              <div className={cn("px-2 py-1 rounded-full text-white text-xs", result.mlPrediction.isAttack ? "bg-red-500" : "bg-green-500")} data-unique-id="cf72eb0b-90f0-4908-8a5c-7bb41a062b10" data-loc="317:14-317:141" data-file-name="components/analysis/ai-results.tsx">
                {result.mlPrediction.isAttack ? "Attack Detected" : "No Attack Detected"}
              </div>
            </div>
          </div>
          
          {attackPredictionsData && <div className="mb-6" data-unique-id="f5f0997e-8d3c-4910-aff9-40f4cfce81ea" data-loc="323:36-323:58" data-file-name="components/analysis/ai-results.tsx">
              <h5 className="text-sm font-medium mb-2 text-gray-700" data-unique-id="3abfbc79-f987-446e-8206-a00351ad9a88" data-loc="324:14-324:69" data-file-name="components/analysis/ai-results.tsx">Attack Type Distribution</h5>
              <div className="h-72 bg-white rounded-lg border shadow-sm p-4" data-unique-id="d285f296-f2ac-4d82-b350-a913b664b83e" data-loc="325:14-325:77" data-file-name="components/analysis/ai-results.tsx">
                <Pie data={attackPredictionsData} options={{
            responsive: true,
            plugins: {
              legend: {
                position: 'bottom',
                labels: {
                  boxWidth: 12,
                  padding: 10,
                  font: {
                    size: 10
                  }
                }
              },
              tooltip: {
                callbacks: {
                  label: function (context) {
                    const label = context.label || '';
                    const value = context.raw || 0;
                    return `${label}: ${(value as number).toFixed(1)}%`;
                  }
                }
              }
            }
          }} />
              </div>
            </div>}
          
          {result.mlPrediction.featureImportance && <div data-unique-id="ab03f419-1743-4dc5-9c0f-1b87ff1f276b" data-loc="353:52-353:57" data-file-name="components/analysis/ai-results.tsx">
              <h5 className="text-sm font-medium mb-2 text-gray-700" data-unique-id="4c525df3-551d-44f0-9c4e-c60e52462a8f" data-loc="354:14-354:69" data-file-name="components/analysis/ai-results.tsx">Top Contributing Features</h5>
              <div className="space-y-2" data-unique-id="9374a0c7-fa0c-4ad1-ba31-ad129a17aee1" data-loc="355:14-355:41" data-file-name="components/analysis/ai-results.tsx">
                {Object.entries(result.mlPrediction.featureImportance).sort((a, b) => b[1] - a[1]).slice(0, 5).map(([feature, importance]) => <div key={feature} className="flex items-center" data-unique-id="d81d8955-c189-42a4-8119-7d5974839805" data-loc="356:142-356:191" data-file-name="components/analysis/ai-results.tsx">
                      <div className="w-1/3 text-xs text-gray-700" data-unique-id="d1753587-5d44-4813-99fc-47eedac2e31d" data-loc="357:22-357:67" data-file-name="components/analysis/ai-results.tsx">{feature}</div>
                      <div className="w-2/3 flex items-center" data-unique-id="5770c43a-08a2-4d2a-af84-b50e86beec15" data-loc="358:22-358:63" data-file-name="components/analysis/ai-results.tsx">
                        <div className="h-3 bg-blue-500 rounded" style={{
                width: `${importance * 100}%`
              }} data-unique-id="56a89e3b-c356-49bc-a218-c79057cf133b" data-loc="359:24-361:17" data-file-name="components/analysis/ai-results.tsx"></div>
                        <span className="ml-2 text-xs text-gray-600" data-unique-id="43d5086a-5444-4478-acaf-5bd206f10756" data-loc="362:24-362:69" data-file-name="components/analysis/ai-results.tsx">{(importance * 100).toFixed(1)}%</span>
                      </div>
                    </div>)}
              </div>
            </div>}
        </div>}
      
      <div className="flex justify-between pt-4" data-unique-id="23ee48b2-15d5-45d1-8169-5c00de1e1b3a" data-loc="369:6-369:49" data-file-name="components/analysis/ai-results.tsx">
        <button onClick={onClose} className="px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50" data-unique-id="fcd56401-b124-4007-bd66-ca7d560dcbbe" data-loc="370:8-370:121" data-file-name="components/analysis/ai-results.tsx">
          Close
        </button>
        
        <button onClick={handleGenerateReport} disabled={isGeneratingReport} className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center" data-unique-id="e3380ab4-64c3-4d19-9633-a91b03940c5c" data-loc="374:8-374:187" data-file-name="components/analysis/ai-results.tsx">
          {isGeneratingReport ? <>
              <Loader2 className="w-4 h-4 mr-2 animate-spin" />
              Generating...
            </> : <>
              <FileBarChart className="w-4 h-4 mr-2" />
              Generate PDF Report
            </>}
        </button>
      </div>
    </div>;
}